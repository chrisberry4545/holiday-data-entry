version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.4.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
  lint:
    docker:
      - image: circleci/node:8.4.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: TSLint code
          command: npm run lint
  bundle:
    docker:
      - image: circleci/node:8.4.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Build app bundles
          command: |
            npm run build
      - save_cache:
          key: bundle-cache-{{ .Branch }}-{{ .Revision }}-{{ checksum "package.json" }}
          paths:
            - ./dist
  deploy:
    docker:
      - image: circleci/node:8.4.0
    steps:
      - checkout
      - run:
          name: Install Heroku CLI
          command: |
            if [ ! -L /usr/local/bin/heroku ];
            then
              wget https://cli-assets.heroku.com/branches/stable/heroku-linux-amd64.tar.gz
              sudo mkdir -p /usr/local/lib /usr/local/bin
              sudo tar -xvzf heroku-linux-amd64.tar.gz -C /usr/local/lib
              sudo ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku
            fi
      - run:
          name: Deploy Master to Heroku
          command: |  # this command is framework-dependent and may vary
            heroku git:remote -a $HEROKU_APP_NAME
            git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:refs/heads/master
            sleep 5  # sleep for 5 seconds to wait for dynos
            heroku restart

workflows:
  version: 2
  ci:
    jobs:
      - build
      - lint:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - bundle:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - lint
            - bundle
